@model Banking.Models.NewPaymentViewModel
@{
    ViewBag.Title = "Nowa płatność";
}


<div class="card card-contact card-raised">
    <div class="card-header text-center">
        <h4 class="card-title">Nowa płatność</h4>
    </div>
    <div class="row">
        <div class="col-md-5 ml-auto mr-auto">
            @using (Html.BeginForm("NewPayment", "UserPanel", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
                {
                    <div class="alert alert-danger" role="alert">
                        <div class="container">
                            <strong>Niestety!</strong> @Html.ValidationSummary(true, "")
                            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                <span aria-hidden="true">
                                    <i class="now-ui-icons ui-1_simple-remove"></i>
                                </span>
                            </button>
                        </div>
                    </div>
                }
                <div class="card-body">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Amount)
                        @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", type = "number", min = "1", step = "100", @Value = "0" })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.PaymentDate)
                        @Html.TextBoxFor(model => model.PaymentDate, new { @class = "form-control date-picker", placeholder = "Wybierz datę" })
                        @Html.ValidationMessageFor(model => model.PaymentDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipentName)
                        @Html.TextBoxFor(model => model.RecipentName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RecipentName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.AccountNumber)
                        @Html.TextBoxFor(model => model.AccountNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.RecipentAddress)
                        @Html.TextBoxFor(model => model.RecipentAddress, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RecipentAddress, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title)
                        @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <button type="submit" class="btn btn-primary btn-round pull-right">Send Message</button>
                </div>
            }
        </div>

        <div class="col-md-5 ml-auto mr-auto">
            @*<form role="form" id="contact-form" method="post">
                    <div class="card-body">
                        <div class="form-group">
                            <label>Email address</label>
                            <div class="input-group">
                                <div class="input-group-prepend">
                                    <span class="input-group-text"><i class="now-ui-icons ui-1_email-85"></i></span>
                                </div>
                                <input type="email" class="form-control" placeholder="Email Here...">
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary btn-round pull-right">Send Message</button>
                    </div>
                </form>*@
        </div>
    </div>
</div>



@section Scripts {
    @*@Scripts.Render("~/Validate")*@

    <script type="text/javascript">
        $('.date-picker').each(function () {
            $(this).datepicker({
                templates: {
                    leftArrow: '<i class="now-ui-icons arrows-1_minimal-left"></i>',
                    rightArrow: '<i class="now-ui-icons arrows-1_minimal-right"></i>'
                }
            }).on('show', function () {
                $('.datepicker').addClass('open');

                datepicker_color = $(this).data('datepicker-color');
                if (datepicker_color.length != 0) {
                    $('.datepicker').addClass('datepicker-' + datepicker_color + '');
                }
            }).on('hide', function () {
                $('.datepicker').removeClass('open');
            });
        });

    </script>
}
